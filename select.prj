<?php
if( isset($_REQUEST["d"]) )
{
  $a_ = explode( "/", __file__ );
  $b_ = $a_[count($a_)-1];
}
// enum-Listen der Zieltabellen.
// Hat eine Zieltabelle mehr als ein enum-Feld, dann gibt es 2 Eintraege
// wie z.B. bei Tabelle GewerkTaktplan
$enumListe=array
(
/* zum Kopieren:
  ""=>"",
*/
/*** Achtung! enum-Felder, welche in CONCAT Anweisungen stehen, werden nicht
mitgezaehlt! ***/
  "Station"=>"ar",// tld
);

$enumOVL=array
( // Overlay: angezeigt werden diese Werte, gespeichert wird der Wert aus Vektor enumListe
);

// Die ORDER BY-Klauseln werden bei den folgenden Statements noch nicht angehaengt, damit im Code die WHERE-Klausel noch ergaenzt werden kann, z.B. um einen bestimmten Datensatz zu erhalten

$filterJahr=array
(
	"ArchivZAV"=>" AND '#filterjahr#'=YEAR(Portal.commit)",
	"AuftragRegulierer"=>" AND '#filterjahr#'=YEAR(Portal.commit)",
);

if( false == isset( $AND ) )
  $AND="";
if( false == isset( $_E['where_and'] ) )
{ // nicht mehr als 5 Wochen aus der Vergangenheit anzeigen
  date_default_timezone_set('Europe/Berlin');
  $datum = new DateTime(date( "Y-m-d" ));
  $kwNow = $datum->format( "W" );
  if( $kwNow < 5 )
    $kwNow = 5; // Wg. Januar-KWs
  $_E['where_and']=" AND cv.KWID > $kwNow-5";
  //$_E['where_and']=""; // PHP-Warning vermeiden
}
$Select=array
(
/* zum Kopieren:
  ""=>"",
*/
  "Station"=>"SELECT s.ID, s.Station FROM Station s",
/* zum Kopieren:
  ""=>"",

*/
);

if( isset($_E["filter"]) and isset($_E['entitaet']) and isset($Select[ $_E['entitaet'] ]) )
{
  $Select[ $_E['entitaet'] ] .= $_E["filter"];
  if( isset($_REQUEST["d"]) )
    dEcho( $b_, "Select[entitaet]: " . $Select[ $_E['entitaet'] ] );
  /***
   *** $_E[filter] wird in ERMsubmit.inc sonst nochmal gesetzt
   *** andere Automaten die _E[filter] setzen haben sowohl dieses Modul als auch
   *** ERMsubmit.inc includiert, deshalb wird dort _A[filterDone] gebraucht.
   ***/
  $_A['filterDone'] = true;
  //unset($_E["filter"]);
}

$OrderBy=array
(
/* zum Kopieren:
  ""=>"",
*/
  "Station"=>" ORDER BY Station",
  "BehoerdeMail"=>" ORDER BY Behoerde, Mail",
  "ProbandAdresse"=>" ORDER BY Name, Vorname, Ort",
  "Angebot"=>" ORDER BY Position",
  "Dauer"=>" ORDER BY ka.Kursart, d.Termine DESC",
  "EDV"=>" ORDER BY ID DESC",
  "EDVAngebot"=>" ORDER BY ID DESC",
  "Kursblatt"=>" ORDER BY j.Jahr, kw.KW, te.TagID, te.vsID",
  "Terminart"=>" ORDER BY Terminart",
  "MailProband"=>" ORDER BY p.Name, p.Vorname, mp.Datum DESC",
  "MassnahmeGebuehr"=>" ORDER BY m. Massnahme, z.Datum DESC",
  "MassnahmeGutachten"=>" ORDER BY m. Massnahme",
  "Ort"=>" ORDER BY Bundesland, Kursort",
  "ProbandOrt"=>" ORDER BY Behoerde, Ort",
  //"ProbandOrt"=>" ORDER BY PLZ",
  "Proband"=>" ORDER BY Name, Vorname",
  "ProbandBehoerde"=>" ORDER BY b.Behoerde, p.Name, p.Vorname, Adresse",
  "ProbandMail"=>" ORDER BY p.Vorname, p.Name, p.geborenAm DESC",
  "ProbandMassnahme"=>" ORDER BY p.Name, p.Vorname, p.geborenAm, m.Massnahme",
  "ProbandMassnahmeZahlung"=>" ORDER BY p.Name, p.Vorname, p.geborenAm, m.Massnahme",
  "ProbandTermin"=>" ORDER BY te.Kuerzel, Jahr, KW, Tag, Kursort, Terminart,  p.Name, p.Vorname",
  "ProbandTerminAnwesend"=>" ORDER BY te.Kuerzel",
  "ProbandMassnahmeBezahlt"=>" ORDER BY te.Kuerzel",
  "Stundensatz"=>" ORDER BY Datum DESC",
  "ProbandTel"=>" ORDER BY Proband, Tel",
  "Termin"=>" ORDER BY RIGHT(te.Kuerzel,2) DESC, j.Jahr, kw.KW, te.TagID, te.vsID",
  "Trainer"=>" ORDER BY Name, Vorname",
  "TrainerOrtTerminart"=>" ORDER BY Bundesland, Terminart, Trainer, Ort",
  "TrainerZugang"=>" ORDER BY Trainer",
  "Umkreis"=>" ORDER BY Region, Kuerzel",
  "Vormerkung"=>" ORDER BY Kursort, Name, Vorname",
);

$gfaerbteSpoidn = array(
	"AuftragRegulierer"=>array(
		7,
		"FFFFFF",
	),
	"AuftragCenterRegulierer"=>array(
		10,
		"FFFFFF",
	),
	"EDV"=>array(
		6,
		"FFFFFF",
	),
	"Eingang"=>array(
		9,
		"FFFFFF",
	),
	"EingangCenter"=>array(
		9,
		"FFFFFF",
	),
	"FreigabeBericht"=>array(
		3,
		"FFFFFF",
	),
);
$SelectNurPK=array
(
);
?>
